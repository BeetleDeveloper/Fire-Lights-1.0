assert(getprop("ro.product.device") == "roamer2" ||
       getprop("ro.build.product") == "roamer2");
show_progress(0.500000, 0);
format("yaffs2", "MTD", "userdata");
format("yaffs2", "MTD", "system");
mount("yaffs2", "MTD", "system", "/system");
package_extract_dir("system", "/system");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("libwiperjni_v01.so", "/system/lib/libwiperjni.so");
symlink("mksh", "/system/bin/sh");
symlink("screencap-gonk", "/system/bin/screencap");
symlink("toolbox", "/system/bin/cat", "/system/bin/chmod",
        "/system/bin/chown", "/system/bin/cmp", "/system/bin/date",
        "/system/bin/dd", "/system/bin/df", "/system/bin/dmesg",
        "/system/bin/getevent", "/system/bin/getprop", "/system/bin/hd",
        "/system/bin/id", "/system/bin/ifconfig", "/system/bin/iftop",
        "/system/bin/insmod", "/system/bin/ioctl", "/system/bin/ionice",
        "/system/bin/kill", "/system/bin/ln", "/system/bin/log",
        "/system/bin/ls", "/system/bin/lsmod", "/system/bin/lsof",
        "/system/bin/mkdir", "/system/bin/mount", "/system/bin/mv",
        "/system/bin/nandread", "/system/bin/netstat",
        "/system/bin/newfs_msdos", "/system/bin/notify", "/system/bin/printenv",
        "/system/bin/ps", "/system/bin/r", "/system/bin/reboot",
        "/system/bin/renice", "/system/bin/rm", "/system/bin/rmdir",
        "/system/bin/rmmod", "/system/bin/route", "/system/bin/schedtop",
        "/system/bin/sendevent", "/system/bin/setconsole",
        "/system/bin/setprop", "/system/bin/sleep", "/system/bin/smd",
        "/system/bin/start", "/system/bin/stop", "/system/bin/sync",
        "/system/bin/top", "/system/bin/touch", "/system/bin/umount",
        "/system/bin/uptime", "/system/bin/vmstat", "/system/bin/watchprops",
        "/system/bin/wipe");
symlink("wiperiface_v01", "/system/bin/wiperiface");
set_perm_recursive(0, 0, 0755, 0644, "/system");
set_perm(0, 0, 0775, "/system/b2g/b2g");
set_perm(0, 0, 0775, "/system/b2g/plugin-container");
set_perm(0, 0, 0775, "/system/b2g/updater");
set_perm_recursive(0, 2000, 0755, 0755, "/system/bin");
set_perm(0, 1000, 04750, "/system/bin/diag_mdlog");
set_perm(0, 1000, 0750, "/system/bin/iptables");
set_perm(0, 3003, 02750, "/system/bin/netcfg");
set_perm(0, 3004, 02755, "/system/bin/ping");
set_perm(0, 2000, 06750, "/system/bin/run-as");
set_perm(0, 1000, 0750, "/system/bin/tc");
set_perm_recursive(1002, 1002, 0755, 0440, "/system/etc/bluetooth");
set_perm(0, 0, 0755, "/system/etc/bluetooth");
set_perm(1000, 1000, 0640, "/system/etc/bluetooth/auto_pairing.conf");
set_perm(3002, 3002, 0444, "/system/etc/bluetooth/blacklist.conf");
set_perm(0, 0, 0644, "/system/etc/bluetooth/iop_device_list.conf");
set_perm(1002, 1002, 0440, "/system/etc/dbus.conf");
set_perm(1014, 2000, 0550, "/system/etc/dhcpcd/dhcpcd-run-hooks");
set_perm(0, 2000, 0550, "/system/etc/init.goldfish.sh");
set_perm(0, 1000, 0550, "/system/etc/init.qcom.sdio.sh");
set_perm_recursive(0, 0, 0755, 0555, "/system/etc/ppp");
set_perm_recursive(0, 2000, 0755, 0755, "/system/xbin");
set_perm(0, 0, 06755, "/system/xbin/librank");
set_perm(0, 0, 06755, "/system/xbin/procmem");
set_perm(0, 0, 06755, "/system/xbin/procrank");
set_perm(0, 0, 06755, "/system/xbin/su");
set_perm(0, 0, 06755, "/system/xbin/tcpdump");
show_progress(0.200000, 10);
assert(package_extract_file("boot.img", "/tmp/boot.img"),
       write_raw_image("/tmp/boot.img", "boot"),
       delete("/tmp/boot.img"));
assert(package_extract_file("splash.img", "/tmp/splash.img"),
       write_raw_image("/tmp/splash.img", "splash"),
       delete("/tmp/splash.img"));
assert(package_extract_file("qcsblhd_cfgdata.mbn", "/tmp/mibib.img"),
       write_raw_image("/tmp/mibib.img", "mibib"),
       delete("/tmp/mibib.img"));
set_appsbl_size(75596);
assert(package_extract_file("appsboot.mbn", "/tmp/appsbl.img"),
       write_raw_image("/tmp/appsbl.img", "appsbl"),
       delete("/tmp/appsbl.img"));
assert(package_extract_file("qcsbl.mbn", "/tmp/qcsbl.img"),
       write_raw_image("/tmp/qcsbl.img", "qcsbl"),
       delete("/tmp/qcsbl.img"));
assert(package_extract_file("amss.mbn", "/tmp/amss.img"),
       write_raw_image("/tmp/amss.img", "amss"),
       delete("/tmp/amss.img"));
set_oemsbl_size(514884);
assert(package_extract_file("oemsbl.mbn", "/tmp/oemsbl2.img"),
       write_raw_image("/tmp/oemsbl2.img", "oemsbl2"),
       delete("/tmp/oemsbl2.img"));
show_progress(0.100000, 0);
unmount("/system");